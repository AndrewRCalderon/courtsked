courtsked <- filter(courtsked, event_type!="DRUG COURT STATUS")
#reading the court schedule from a PDF
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header row
courtsked$time <- str_trim(str_sub(courtsked$header, 1, 8))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
library(DT)
library(tidyverse)
library(pdftools)
library(lubridate)
#reading the court schedule from a PDF
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header row
courtsked$time <- str_trim(str_sub(courtsked$header, 1, 8))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
library(DT)
courtsked %>%
group_by(event_type) %>%
mutate(count=n()) %>%
datatable()
courtsked %>%
group_by(event_type) %>%
summarize(count=n()) %>%
datatable()
courtsked <- filter(courtsked, event_type!="DRUG COURT STATUS")
courtsked$case_no <- str_sub(courtsked$header, str_which(courtsked$header, " CR ")-4,
str_which(courtsked$header, " CR ")+6)
str_which(courtsked$header, " CR ")
courtsked$case_no <- str_sub(courtsked$header, str_locate(courtsked$header, " CR ")-4,
str_locate(courtsked$header, " CR ")+6)
View(courtsked)
head(courtsked$case_no)
str_locate(courtsked$header)
str_locate(courtsked$header, " CR ")
courtsked$case_no <- str_sub(courtsked$header, str_locate(courtsked$header, " CR ")$start-4,
str_locate(courtsked$header, " CR ")$end+6)
#pulling info from the header row
CR_loc <- str_locate(courtsked$header, " CR ")
View(CR_loc)
VS_loc <- str_locate(courtsked$header, "-vs-")
View(CR_loc)
courtsked$case_no <- str_sub(courtsked$header, CR_loc$start-4, CR_loc$end+6)
CR_loc <- enframe(str_locate(courtsked$header, " CR "))
VS_loc <- enframe(str_locate(courtsked$header, "-vs-"))
CR_loc <- enframe(str_locate(courtsked$header, " CR "))
#pulling info from the header row
CR_loc <- str_locate(courtsked$header, " CR ")
CR_loc <- enframe(CR_loc)
View(CR_loc)
cr_loc <- str_locate(coursked$header, " CR ")
View(courtsked)
cr_loc <- str_locate(courtsked$header, " CR ")
vs_loc <- str_locate(courtsked$header, "vs")
rm(CR_loc)
rm(VS_loc)
courtsked$case_no <- str_sub(courtsked$header, CR_loc[ ,1]-4, CR_loc[ ,2]+6)
courtsked$case_no <- str_sub(courtsked$header, cr_loc[ ,1]-4, cr_loc[ ,2]+6)
View(courtsked)
coursked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
courtsked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
courtsked <- courtsked %>%
select(-header) %>%
filter(date, time, case_no, deft_name, event_type, judge)
View(courtsked)
#reading the court schedule from a PDF
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header line
cr_loc <- str_locate(courtsked$header, " CR ")
vs_loc <- str_locate(courtsked$header, "vs")
courtsked$time <- str_trim(str_sub(courtsked$header, 1, 8))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
courtsked$case_no <- str_sub(courtsked$header, cr_loc[ ,1]-4, cr_loc[ ,2]+6)
courtsked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
courtsked <- courtsked %>%
select(-header, date, time, case_no, deft_name, event_type, judge)
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header line
cr_loc <- str_locate(courtsked$header, " CR ")
vs_loc <- str_locate(courtsked$header, "vs")
courtsked$time <- str_trim(str_sub(courtsked$header, 1, 8))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
courtsked$case_no <- str_sub(courtsked$header, cr_loc[ ,1]-4, cr_loc[ ,2]+6)
courtsked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
courtsked <- courtsked %>%
select(-header) %>%
select(date, time, case_no, deft_name, event_type, judge)
courtsked$time <- ms(str_trim(str_sub(courtsked$header, 1, 8)))
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header line
cr_loc <- str_locate(courtsked$header, " CR ")
vs_loc <- str_locate(courtsked$header, "vs")
courtsked$time <- ms(str_trim(str_sub(courtsked$header, 1, 8)))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
courtsked$case_no <- str_sub(courtsked$header, cr_loc[ ,1]-4, cr_loc[ ,2]+6)
courtsked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
courtsked <- courtsked %>%
select(-header) %>%
select(date, time, case_no, deft_name, event_type, judge)
#removing drug court status hearings, which we don't cover
courtsked <- filter(courtsked, event_type!="DRUG COURT STATUS")
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header line
cr_loc <- str_locate(courtsked$header, " CR ")
vs_loc <- str_locate(courtsked$header, "vs")
courtsked$time <- hm(str_trim(str_sub(courtsked$header, 1, 8)))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
courtsked$case_no <- str_sub(courtsked$header, cr_loc[ ,1]-4, cr_loc[ ,2]+6)
courtsked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
#removing the header and organizing things
courtsked <- courtsked %>%
select(-header) %>%
select(date, time, case_no, deft_name, event_type, judge)
View(courtsked)
#reading the court schedule from a PDF
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header line
cr_loc <- str_locate(courtsked$header, " CR ")
vs_loc <- str_locate(courtsked$header, "vs")
courtsked$time <- str_trim(str_sub(courtsked$header, 1, 8))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
courtsked$case_no <- str_sub(courtsked$header, cr_loc[ ,1]-4, cr_loc[ ,2]+6)
courtsked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
#removing the header and organizing things
courtsked <- courtsked %>%
select(-header) %>%
select(date, time, case_no, deft_name, event_type, judge)
#removing drug court status hearings, which we don't cover
courtsked <- filter(courtsked, event_type!="DRUG COURT STATUS")
courtsked$datetime <- paste(courtsked$date, courtsked$time, sep="")
courtsked$datetime <- ymd_hm(paste(courtsked$date, courtsked$time, sep=""))
#reading the court schedule from a PDF
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header line
cr_loc <- str_locate(courtsked$header, " CR ")
vs_loc <- str_locate(courtsked$header, "vs")
courtsked$time <- str_trim(str_sub(courtsked$header, 1, 8))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
courtsked$case_no <- str_sub(courtsked$header, cr_loc[ ,1]-4, cr_loc[ ,2]+6)
courtsked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
courtsked$datetime <- ymd_hm(paste(courtsked$date, courtsked$time, sep=""))
#removing the header and organizing things
courtsked <- courtsked %>%
select(-header, -date, -time) %>%
select(datetime, case_no, deft_name, event_type, judge)
#removing drug court status hearings, which we don't cover
courtsked <- filter(courtsked, event_type!="DRUG COURT STATUS")
library(tidyverse)
library(pdftools)
library(lubridate)
#reading the court schedule from a PDF
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header line
cr_loc <- str_locate(courtsked$header, " CR ")
vs_loc <- str_locate(courtsked$header, "vs")
courtsked$time <- str_trim(str_sub(courtsked$header, 1, 8))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
courtsked$case_no <- str_sub(courtsked$header, cr_loc[ ,1]-4, cr_loc[ ,2]+6)
courtsked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
courtsked$datetime <- ymd_hm(paste(courtsked$date, courtsked$time, sep=""))
#removing the header and organizing things
courtsked <- courtsked %>%
select(-header, -date, -time) %>%
select(datetime, event_type, case_no, deft_name, judge)
#removing drug court status hearings, which we don't cover
courtsked <- filter(courtsked, event_type!="DRUG COURT STATUS")
now()
today()
#writing it as a csv file to share with another report who covers the courts
date <- today
#writing it as a csv file to share with another report who covers the courts
date <- today()
write_csv(courtsked, filename)
filename <- paste0(today, "courtsked.csv")
filename <- paste0(date, "courtsked.csv")
write_csv(courtsked, filename)
write_csv(courtsked, filename)
library(tidyverse)
library(pdftools)
library(lubridate)
#reading the court schedule from a PDF
courtsked <- pdf_text("raw_data/CRTR9342.pdf")
#breaking the schedule up at line breaks
courtsked <- courtsked %>%
str_split("\n") %>%
#removing the header and last (blank) row from each page
lapply(function(x) {
x <- tail(x, -6)
x <- head(x, -1)
x <- enframe(x)
x <- select(x, -name)
})
#converting the list into one long dataframe
courtsked <- do.call(rbind, courtsked)
#removing attorney names for easier parsing
courtsked <- courtsked %>%
filter(str_detect(value, " CR |/|Event")==TRUE) %>%
#removing a specific case that messes with results
filter(str_detect(value, "IN LIEU/CONVICTION")!=TRUE) %>%
#creating an key by which to spread the data
mutate(legend=case_when(str_detect(value, (" CR "))==TRUE ~ "header",
str_detect(value, ("/"))==TRUE ~ "date",
str_detect(value, ("Event"))==TRUE ~ "event_type"))
#each court event has three unique rows, so I'm creating unique IDs for each event
#and spreading so each row is one court event
courtsked <- courtsked %>%
group_by(legend) %>%
mutate(id=row_number()) %>%
spread(legend, value) %>%
select(-id)
#cleaning up the date and event_type columns
courtsked$date <- mdy(courtsked$date)
courtsked$event_type <- str_trim(str_sub(courtsked$event_type, 1, -19))
#pulling info from the header line
cr_loc <- str_locate(courtsked$header, " CR ")
vs_loc <- str_locate(courtsked$header, "vs")
courtsked$time <- str_trim(str_sub(courtsked$header, 1, 8))
courtsked$judge <- str_sub(courtsked$header, -3, -1)
courtsked$case_no <- str_sub(courtsked$header, cr_loc[ ,1]-4, cr_loc[ ,2]+6)
courtsked$deft_name <- str_trim(str_sub(courtsked$header, vs_loc[ ,2]+2, -3))
courtsked$datetime <- ymd_hm(paste(courtsked$date, courtsked$time, sep=""))
#removing the header and organizing things
courtsked <- courtsked %>%
select(-header, -date, -time) %>%
select(datetime, event_type, case_no, deft_name, judge)
#removing drug court status hearings, which we don't cover
courtsked <- filter(courtsked, event_type!="DRUG COURT STATUS")
#writing it as a csv file to share with another report who covers the courts
date <- today()
filename <- paste0("output_data/", date, "courtsked.csv")
write_csv(courtsked, filename)
View(courtsked)
View(courtsked)
View(courtsked)
